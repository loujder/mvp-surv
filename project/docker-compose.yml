version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: project-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-auth_db}
      POSTGRES_USER: ${POSTGRES_USER:-auth_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-auth_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - app-network
  frontend:
    build: 
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:5000/api}

  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://auth_user:auth_password@postgres:5432/auth_db}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_CHAT_IDS=${ADMIN_CHAT_IDS}
      - TELEGRAM_WEBAPP_SECRET=${TELEGRAM_WEBAPP_SECRET}
      - DOMAIN=${DOMAIN:-localhost}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:5000/api}
    depends_on:
      - postgres
volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge